type gx_fpd, domain;
type gx_fpd_device, dev_type;
type gx_fpd_lib_file, data_file_type;
type gx_fp_lib_file, data_file_type;
type gx_fpd_data_file, data_file_type;
type gx_fpd_service, app_api_service, system_server_service, service_manager_type;
type gx_fpd_exec, exec_type, file_type;
file_type_auto_trans(gx_fpd, system_data_file, gx_fpd_data_file);

allow shell ctl_default_prop:property_service set;

allow appdomain gx_fpd_lib_file:file rx_file_perms;
allow appdomain gx_fp_lib_file:file rx_file_perms;
allow appdomain gx_fpd_data_file:file { create rw_file_perms };

allow binderservicedomain gx_fpd_data_file:file { create open getattr write };
allow binderservicedomain fingerprintd_data_file:file { create open getattr write };

set_prop(gx_fpd, system_prop)
set_prop(gx_fpd, config_prop)

init_daemon_domain(gx_fpd)
binder_use(gx_fpd)
binder_call(gx_fpd, binderservicedomain)
binder_call(gx_fpd, appdomain)
binder_call(gx_fpd, system_server);
binder_service(gx_fpd)

use_keystore(gx_fpd)
allow gx_fpd keystore:keystore_key { add_auth };

allow gx_fpd permission_service:service_manager find;

allow gx_fpd gx_fpd_service:service_manager { add find };
allow gx_fpd self:process execmem;
allow gx_fpd self:capability { dac_override dac_read_search };
allow gx_fpd kernel:system module_request;

allow gx_fpd gx_fpd_device:file { create_file_perms };
allow gx_fpd gx_fpd_device:chr_file { getattr open read ioctl lock append write rw_file_perms setattr };

r_dir_file(gx_fpd, fingerprintd_data_file)
allow gx_fpd fingerprintd_data_file:file { create_file_perms rw_file_perms create open };
allow gx_fpd fingerprintd_data_file:chr_file { rw_file_perms setattr };
allow gx_fpd fingerprintd_data_file:dir { ra_dir_perms r_dir_perms create setattr };
allow tee gx_fpd_data_file:dir { open read write search remove_name add_name };
allow tee gx_fpd_data_file:file { read write open unlink create };

r_dir_file(gx_fpd, gx_fpd_data_file)
allow gx_fpd gx_fpd_data_file:file { create_file_perms create open write};
allow gx_fpd gx_fpd_data_file:chr_file { rw_file_perms setattr };
allow gx_fpd gx_fpd_data_file:dir { create setattr open read ra_dir_perms rw_dir_perms };
allow gx_fpd_data_file labeledfs:filesystem associate;

allow gx_fpd gx_fpd_lib_file:file { create_file_perms getattr read execute execmod };
allow gx_fpd gx_fpd_lib_file:chr_file { rw_file_perms setattr };
allow gx_fpd gx_fpd_lib_file:dir ra_dir_perms;
allow gx_fpd gx_fp_lib_file:file { create_file_perms getattr read execute execmod };
allow gx_fpd gx_fp_lib_file:chr_file { rw_file_perms setattr };
allow gx_fpd gx_fp_lib_file:dir ra_dir_perms;

allow gx_fpd system_file:file { rx_file_perms getattr read execute execmod };

r_dir_file(gx_fpd, sdcard_type)
allow gx_fpd fuse:dir create_dir_perms;
allow gx_fpd fuse:file create_file_perms;
allow gx_fpd sdcard_type:file write;
allow gx_fpd app_data_file:dir search;
allow gx_fpd app_data_file:file rw_file_perms;

allow gx_fpd self:netlink_socket create;
allow gx_fpd system_data_file:dir { write open read add_name create };
allow gx_fpd system_data_file:file { open };

allow gx_fpd tee_device:chr_file { open read write ioctl };
